models.py

from django.db import models

# Create your models here.
class Course(models.Model):
 course_code=models.CharField(max_length=40) 
 course_name=models.CharField(max_length=100) 
 course_credits=models.IntegerField() 
 
class Student(models.Model): 
 student_usn=models.CharField(max_length=20) 
 student_name=models.CharField(max_length=100) 
 student_sem=models.IntegerField() 
 enrolment=models.ManyToManyField(Course)


views.py

from django.shortcuts import render
from django.http import HttpResponse
from django.views import generic

from ap5.models import Course, Student

from django.http import HttpResponse
from django.shortcuts import render
from .models import Student, Course

def reg(request): 
    if request.method == "POST": 
        sid = request.POST.get("sname") 
        cid = request.POST.get("cname") 
        student = Student.objects.get(id=sid) 
        course = Course.objects.get(id=cid) 
        res = student.enrolment.filter(id=cid) 
        if res: 
            return HttpResponse("<h1>Student already enrolled</h1>") 
        student.enrolment.add(course) 
        return HttpResponse("<h1>Student enrolled successfully</h1>") 
    else: 
        students = Student.objects.all() 
        courses = Course.objects.all()
        return render(request, "reg.html", {"students": students, "courses": courses})

def course_search(request): 
    if request.method == "POST":
        cid = request.POST.get("cname") 
        s = Student.objects.all() 
        student_list = [] 
        for student in s: 
            if student.enrolment.filter(id=cid): 
                student_list.append(student) 
        if len(student_list) == 0: 
            return HttpResponse("<h1>No Students enrolled</h1>")
        return render(request, "selected_student.html", {"student_list": student_list})
    else: 
        courses = Course.objects.all() 
        return render(request, "course_search.html", {"courses": courses})

class StudentListView(generic.ListView):
    model=Student
    template_name="student_list.html"   

class StudentDetailView(generic.DetailView):
    model=Student
    template_name="student_detail.html"


import csv
from django.http import HttpResponse
from .models import Course

def construct_csv_from_model(request):
    courses = Course.objects.all()
    response = HttpResponse(content_type="text/csv")
    response['Content-Disposition'] = 'attachment; filename="courses_data.csv"'
    
    writer = csv.writer(response)
    writer.writerow(["Course Name", "Course Code", "Credits"])
    
    for course in courses:
        writer.writerow([course.course_name, course.course_code, course.course_credits])
    
    return response



urls.py
from django.contrib import admin
from django.urls import path
from ap5.views import reg, course_search
from ap5.views import StudentDetailView,StudentListView,construct_csv_from_model

urlpatterns = [
    path('admin/', admin.site.urls),
    path('reg/',reg),
    path('course_search/',course_search),
    path('student_list/',StudentListView.as_view()),
    path('student_detail/<int:pk>/',StudentDetailView.as_view()),
    path('construct_csv_from_model/',construct_csv_from_model),
]
